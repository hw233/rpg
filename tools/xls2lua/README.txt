表格格式：
列：
第一列为描述列,工具不会读取第一列内容,后续列为字段列,所有列必须连续,中间不可有空列

行：
前八行为表头行,其他为数据行
第一行: 规则行,在该行填写相应的规则函数(改到导表后处理中处理, 留空即可)
第二行: 字段名称,中文名,不参与逻辑,仅供阅读
第三行: 英文名,字段的key,需要导出的字段必须有英文名,并且同张表每个字段的英文名需唯一
第四行: 字段类型(见类型说明)
第五行: 是否主键(Y/N),至少需要有一列为主键,支持多列主键,多列主键按从左到右作为层级
第六行: 是否必填(Y/N),主键默认为必填(如果已指定为主键,该行可不填)
第七行: 依赖关系,填写该列字段依赖其他表的哪个字段(见依赖说明)
第八行: 导出目标(见导出目标说明)

特殊:
单元格(1, A)保留, 不允许填内容

有效位置:
列: 第2列到第n列, n为连续的最后一个有配置的列
行: 第2行到第n行, n为连续的最后一个有配置的行且不少于8行, 前8行为表头行, 剩余为数据行.

类型说明:
支持的类型：int, string, bool, float, table
int: 整数
string: 字符串
bool: T,TRUE为true, 其他均为false(注意填TRUE需要将excel单元格设置为文本格式)
float: 浮点数
table: 以逗号与分号作为分割符切割字符串到table(不可以作为主键)

float类型格式：
字段类型可填float,或者float,数字(如float,3) 数字范围[0-5], 后面的数字表示小数位数, 不填默认保留两位,采用四舍五入的方式截断小数位
如：表格内容为1.2346, 字段类型为float 则导出结果为 1.23
如：表格内容为1.2346, 字段类型为float,0 则导出结果为 1.0
如：表格内容为1.2346, 字段类型为float,1 则导出结果为 1.2
如：表格内容为1.2346, 字段类型为float,2 则导出结果为 1.23
如：表格内容为1.2346, 字段类型为float,3 则导出结果为 1.235
如：表格内容为1.2346, 字段类型为float,4 则导出结果为 1.2346
如：表格内容为1.2346, 字段类型为float,5 则导出结果为 1.2346

table类型支持以下格式:
1.全部使用逗号隔开,生成一个数组, 如：表格内容为1,2,3,4 则导出结果为{1, 2, 3, 4}
2.全部使用分号隔开,生成一个数组, 如：表格内容为1;2;3;4 则导出结果为{1, 2, 3, 4}
3.同时包含逗号与分号, 分号优先级高于逗号, 以分号生成一个数组,多个元素导出数组, 单个元素导出值 如：表格内容为1,2;2,3;3,4,5;6 则导出结果为{{1, 2}, {2, 3}, {3, 4, 5}, 6}
4.包含冒号时,生成一个字典,冒号左右的元素分别为字典的key,value,以分号分割多个, 如：表格内容为1:2;2:3,4;3:1,2,3 则导出结果为{[1] = 2, [2] = {3, 4}, [3] = {1, 2, 3}}
5.如需导出的某个元素为字符串,表格中该元素需要加入双引号, 如：表格内容为1:"a";"b":4;"c":"10" 则导出结果为{[1] = "a", ["b"] = 4, ["c"] = "10"}

依赖说明:
第七行可配置依赖关系,配置的依赖关系只针对该列生效,多个依赖关系用";"隔开
_ref: 指定关联哪张表的哪个字段, 格式: _ref("物品表", "id")表示填写该规则的列的值关联物品表的id字段, 依次对该列下的所有数据做检查, 如果物品表没有id字段或者id字段的数据中没有相应的数据,则关联规则检查不通过,导表失败
_key_ref: 指定table的key关联哪张表的哪个字段, 只能作用于字段类型为table并且格式为key:value的填法, 格式: _key_ref("物品表", "id")

导出目标说明:
c: 该列只导出到客户端
s: 该列只导出到服务端
cs: 该列导出到双端
为空: 该列不导出(不导出的列导表过程中不会检查内容正确性)

导表流程：
定义好excel表格
在excel_define.py中添加导出配置
(可选)如需对某些表格做额外处理,在user_behavior.py中添加相应逻辑
执行导表, 输出"导出成功"表示全部完成, 否则根据输出信息修改表格或者逻辑
